name: Sync secrets and settings to all my repositories

on:
  push:
    paths:
      - .github/workflows/sync.yml
  workflow_dispatch:

jobs:
  get-repositories:
    name: Get repositories managed by the GitHub App
    runs-on: ubuntu-latest
    steps:
      - name: Get the GitHub App installation token
        uses: alejandrohdezma/actions/alejandrohdezma-steward-token@main
        id: github_app
        with:
          private-key: ${{ secrets.SCALA_STEWARD_APP_PRIVATE_KEY }}
      - name: Get the repositories where the GitHub App is installed
        uses: actions/github-script@v5
        id: repositories
        with:
          github-token: ${{ steps.github_app.outputs.token }}
          script: return (await github.rest.apps.listReposAccessibleToInstallation()).data.repositories.map(r => r.full_name)
    outputs:
      repositories: ${{ steps.repositories.outputs.result }}
  sync:
    name: ${{ matrix.repo }} - Sync settings, labels and secrets
    runs-on: ubuntu-latest
    needs: get-repositories
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.get-repositories.outputs.repositories) }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v2.3.5
      - name: Sync settings to ${{ matrix.repo }}
        run: |
          gh api --silent -X PATCH /repos/${{ matrix.repo }} --input - <<< '{
            "has_wiki": false,
            "has_projects": false,
            "delete_branch_on_merge": true,
            "allow_auto_merge": true,
            "allow_merge_commit": true,
            "allow_squash_merge": false,
            "allow_rebase_merge": false
          }'
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
      - name: Sync branch protection to ${{ matrix.repo }}
        run: |
          default_branch=$(gh api /repos/${{ matrix.repo }} --jq '.default_branch')

          gh api --silent -X PUT "/repos/${{ matrix.repo }}/branches/$default_branch/protection" --input - <<< '{
              "required_status_checks": {
                  "strict": true,
                  "contexts": [
                      "Run \"sbt ci-test\" on JDK adopt:1.8",
                      "Run \"sbt ci-test\" on JDK adopt:1.11",
                      "Run \"sbt ci-test\" on JDK adopt:1.15"
                  ]
              },
              "enforce_admins": false,
              "required_pull_request_reviews": null,
              "required_conversation_resolution": true,
              "restrictions": null
          }'
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
      - name: Sync labels between this repo and ${{ matrix.repo }}
        uses: alejandrohdezma/actions/sync-labels@main
        with:
          github-token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
          destination: ${{ matrix.repo }}
      - name: Sync secrets to ${{ matrix.repo }}
        run: |
          gh secret set PGP_PASSPHRASE -b"${PGP_PASSPHRASE}" --repo ${{ matrix.repo }}
          gh secret set PGP_SECRET -b"${PGP_SECRET}" --repo ${{ matrix.repo }}
          gh secret set GH_APP_TOKEN -b"${GH_APP_TOKEN}" --repo ${{ matrix.repo }}
          gh secret set SONATYPE_PASSWORD -b"${SONATYPE_PASSWORD}" --repo ${{ matrix.repo }}
          gh secret set SONATYPE_USERNAME -b"${SONATYPE_USERNAME}" --repo ${{ matrix.repo }}
          gh secret set ADMIN_GITHUB_TOKEN -b"${ADMIN_GITHUB_TOKEN}" --repo ${{ matrix.repo }}
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          GH_APP_TOKEN: ${{ secrets.GH_APP_TOKEN }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          ADMIN_GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
